# -*- coding: utf-8 -*-
"""HW2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Kwym7Rcokb1OU_20LOB5cz7b4j_h1lpo
"""

from sklearn import datasets
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler

#print number of rows and colums
def rowsColums(df):
  size = df.shape
  print(f'The Number of rows: {size[0]} and the number of colums: {size[1]}')

def idFeaturesLabel(df):
  print(f'The feature are: \n {x} \n The labels are \n {y}')

def splitData(df):
  #Split data into training and testing sets
  xTrain, xTest, yTrain, yTest = train_test_split(x,y,test_size= 0.4, random_state=4)
  print(f'The test features are: \n {xTest} \n The test labels are: \n {yTest}')
  print(f'The training features are: \n {xTrain} \n The training labels are: \n {yTrain}')

def math(df):
  avg = df['sepalLength'].mean()
  std = df['sepalLength'].std()
  min = df['sepalLength'].min()
  max = df['sepalLength'].max()
  print(f'The values of sepalLength are: \n Average: {round(avg, 2)} \n Standard Deviation: {round(std, 2)} \n Minimum: {round(min, 2)} \n Maximum: {round(max, 2)}')
  avg = df['sepalWidth'].mean()
  std = df['sepalWidth'].std()
  min = df['sepalWidth'].min()
  max = df['sepalWidth'].max()
  print(f'The values of sepalWidth are: \n Average: {round(avg, 2)} \n Standard Deviation: {round(std, 2)} \n Minimum: {round(min, 2)} \n Maximum: {round(max, 2)}')
  avg = df['petalLength'].mean()
  std = df['petalLength'].std()
  min = df['petalLength'].min()
  max = df['petalLength'].max()
  print(f'The values of petalLength are: \n Average: {round(avg, 2)} \n Standard Deviation: {round(std, 2)} \n Minimum: {round(min, 2)} \n Maximum: {round(max, 2)}')
  avg = df['petalWidth'].mean()
  std = df['petalWidth'].std()
  min = df['petalWidth'].min()
  max = df['petalWidth'].max()
  print(f'The values of petalWidth are: \n Average: {round(avg, 2)} \n Standard Deviation: {round(std, 2)} \n Minimum: {round(min, 2)} \n Maximum: {round(max, 2)}')

def frequency(df):
  print('The frequency of unique values in sepalLength is: ')
  sl = np.array(df['sepalLength'].value_counts())
  print(sl)
  print('The frequency of unique values in sepalWidth is: ')
  sw = np.array(df['sepalWidth'].value_counts())
  print(sw)
  print('The frequency of unique values in petalLength is: ')
  pl = np.array(df['petalLength'].value_counts())
  print(pl)
  print('The frequency of unique values in petalWidth is: ')
  pw = np.array(df['petalWidth'].value_counts())
  print(pw)

def summary(df):
  print('The summary of all the stats of the columns are: ')
  print((df.iloc[:,0:4].describe()))

def correlation(df):
  print('The correlation between the columns are: ')
  print(df.corr())


irisFeatures = ['sepalLength', 'sepalWidth', 'petalLength', 'petalWidth', 'Label']

df = pd.read_csv('Iris.data.csv', header= None, names=irisFeatures )


#Split data into training and testing sets
x= np.array(df.iloc[:,0:4]) #features including all rows
y= np.array(df['Label']) #label column

rowsColums(df)
idFeaturesLabel(df)
splitData(df)
math(df)
frequency(df)
summary(df)
correlation(df)